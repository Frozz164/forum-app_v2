{"ast":null,"code":"import axios from 'axios';\nconst API_BASE = 'http://localhost:8080/api/v1';\nconst FORUM_API = 'http://localhost:8081/api';\nexport const registerUser = userData => {\n  return axios.post(`${API_BASE}/register`, userData);\n};\nexport const loginUser = credentials => {\n  return axios.post(`${API_BASE}/login`, credentials, {\n    withCredentials: true // Добавьте эту строку\n  });\n};\nexport const getPosts = async () => {\n  try {\n    const response = await axios.get(`${FORUM_API}/posts`);\n    return {\n      data: response.data || []\n    }; // Гарантируем возврат массива\n  } catch (error) {\n    console.error('Error fetching posts:', error);\n    return {\n      data: []\n    }; // Возвращаем пустой массив при ошибке\n  }\n};\nexport const createPost = (postData, token) => {\n  return axios.post(`${FORUM_API}/posts`, postData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const deletePost = (postId, token) => {\n  return axios.delete(`${FORUM_API}/posts/${postId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};","map":{"version":3,"names":["axios","API_BASE","FORUM_API","registerUser","userData","post","loginUser","credentials","withCredentials","getPosts","response","get","data","error","console","createPost","postData","token","headers","Authorization","deletePost","postId","delete"],"sources":["E:/forum-app_v2/forum-react-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE = 'http://localhost:8080/api/v1';\r\nconst FORUM_API = 'http://localhost:8081/api';\r\n\r\nexport const registerUser = (userData) => {\r\n    return axios.post(`${API_BASE}/register`, userData);\r\n};\r\n\r\nexport const loginUser = (credentials) => {\r\n    return axios.post(`${API_BASE}/login`, credentials, {\r\n        withCredentials: true  // Добавьте эту строку\r\n    });\r\n};\r\n\r\nexport const getPosts = async () => {\r\n    try {\r\n        const response = await axios.get(`${FORUM_API}/posts`);\r\n        return { data: response.data || [] }; // Гарантируем возврат массива\r\n    } catch (error) {\r\n        console.error('Error fetching posts:', error);\r\n        return { data: [] }; // Возвращаем пустой массив при ошибке\r\n    }\r\n};\r\n\r\nexport const createPost = (postData, token) => {\r\n    return axios.post(`${FORUM_API}/posts`, postData, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n};\r\n\r\nexport const deletePost = (postId, token) => {\r\n    return axios.delete(`${FORUM_API}/posts/${postId}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,8BAA8B;AAC/C,MAAMC,SAAS,GAAG,2BAA2B;AAE7C,OAAO,MAAMC,YAAY,GAAIC,QAAQ,IAAK;EACtC,OAAOJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,QAAQ,WAAW,EAAEG,QAAQ,CAAC;AACvD,CAAC;AAED,OAAO,MAAME,SAAS,GAAIC,WAAW,IAAK;EACtC,OAAOP,KAAK,CAACK,IAAI,CAAC,GAAGJ,QAAQ,QAAQ,EAAEM,WAAW,EAAE;IAChDC,eAAe,EAAE,IAAI,CAAE;EAC3B,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,GAAGT,SAAS,QAAQ,CAAC;IACtD,OAAO;MAAEU,IAAI,EAAEF,QAAQ,CAACE,IAAI,IAAI;IAAG,CAAC,CAAC,CAAC;EAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO;MAAED,IAAI,EAAE;IAAG,CAAC,CAAC,CAAC;EACzB;AACJ,CAAC;AAED,OAAO,MAAMG,UAAU,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOjB,KAAK,CAACK,IAAI,CAAC,GAAGH,SAAS,QAAQ,EAAEc,QAAQ,EAAE;IAC9CE,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUF,KAAK;IAAG;EAChD,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMG,UAAU,GAAGA,CAACC,MAAM,EAAEJ,KAAK,KAAK;EACzC,OAAOjB,KAAK,CAACsB,MAAM,CAAC,GAAGpB,SAAS,UAAUmB,MAAM,EAAE,EAAE;IAChDH,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUF,KAAK;IAAG;EAChD,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}