{"ast":null,"code":"var _jsxFileName = \"E:\\\\forum-app_v2\\\\forum-react-frontend\\\\src\\\\components\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { forumAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [author, setAuthor] = useState(''); // Добавляем поле для имени автора\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const fetchPosts = async () => {\n    try {\n      const response = await forumAPI.getPosts();\n      setPosts(response.data || []);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  const createPost = async () => {\n    if (!title || !content || !author) {\n      alert('Please fill all fields including your name');\n      return;\n    }\n    try {\n      await forumAPI.createPost({\n        title,\n        content,\n        author // Отправляем имя автора с постом\n      });\n      setTitle('');\n      setContent('');\n      setAuthor('');\n      await fetchPosts(); // Обновляем список постов\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error creating post:', error);\n      alert('Failed to create post: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Post title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"Post content\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: author,\n        onChange: e => setAuthor(e.target.value),\n        placeholder: \"Your name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createPost,\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-list\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"By: \", post.author || 'Anonymous']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"+QqdDtpDmUL7nT5VHkFpZ+XM3Nw=\");\n_c = Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useState","useEffect","forumAPI","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","title","setTitle","content","setContent","author","setAuthor","fetchPosts","response","getPosts","data","error","console","createPost","alert","_error$response","_error$response$data","message","className","children","value","onChange","e","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","post","id","_c","$RefreshReg$"],"sources":["E:/forum-app_v2/forum-react-frontend/src/components/Posts.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { forumAPI } from '../services/api';\r\n\r\nexport default function Posts() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [author, setAuthor] = useState(''); // Добавляем поле для имени автора\r\n\r\n    useEffect(() => {\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    const fetchPosts = async () => {\r\n        try {\r\n            const response = await forumAPI.getPosts();\r\n            setPosts(response.data || []);\r\n        } catch (error) {\r\n            console.error('Error fetching posts:', error);\r\n        }\r\n    };\r\n\r\n    const createPost = async () => {\r\n        if (!title || !content || !author) {\r\n            alert('Please fill all fields including your name');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await forumAPI.createPost({\r\n                title,\r\n                content,\r\n                author // Отправляем имя автора с постом\r\n            });\r\n            setTitle('');\r\n            setContent('');\r\n            setAuthor('');\r\n            await fetchPosts(); // Обновляем список постов\r\n        } catch (error) {\r\n            console.error('Error creating post:', error);\r\n            alert('Failed to create post: ' + (error.response?.data?.error || error.message));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"posts-container\">\r\n            <div className=\"post-form\">\r\n                <input\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    placeholder=\"Post title\"\r\n                    required\r\n                />\r\n                <textarea\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                    placeholder=\"Post content\"\r\n                    required\r\n                />\r\n                <input\r\n                    value={author}\r\n                    onChange={(e) => setAuthor(e.target.value)}\r\n                    placeholder=\"Your name\"\r\n                    required\r\n                />\r\n                <button onClick={createPost}>\r\n                    Create Post\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"posts-list\">\r\n                {posts.map(post => (\r\n                    <div key={post.id} className=\"post\">\r\n                        <h3>{post.title}</h3>\r\n                        <p>{post.content}</p>\r\n                        <div className=\"post-footer\">\r\n                            <span>By: {post.author || 'Anonymous'}</span>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}