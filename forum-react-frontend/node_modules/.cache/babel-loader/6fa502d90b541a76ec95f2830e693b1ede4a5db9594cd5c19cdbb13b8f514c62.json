{"ast":null,"code":"var _jsxFileName = \"E:\\\\forum-app_v2\\\\forum-react-frontend\\\\src\\\\components\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getPosts, createPost } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Posts({\n  token,\n  user\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await getPosts();\n        setPosts(response.data);\n      } catch (err) {\n        console.error('Failed to fetch posts', err);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await createPost({\n        title,\n        content\n      }, token);\n      const response = await getPosts();\n      setPosts(response.data);\n      setTitle('');\n      setContent('');\n    } catch (err) {\n      console.error('Failed to create post', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), token && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: content,\n        onChange: e => setContent(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '20px 0',\n          padding: '10px',\n          border: '1px solid #eee'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"By: \", post.author || 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"E7qv1deD/NarrXDo1wmwu2Pcn1g=\");\n_c = Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useState","useEffect","getPosts","createPost","jsxDEV","_jsxDEV","Posts","token","user","_s","posts","setPosts","title","setTitle","content","setContent","fetchPosts","response","data","err","console","error","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","map","post","style","margin","padding","border","author","id","_c","$RefreshReg$"],"sources":["E:/forum-app_v2/forum-react-frontend/src/components/Posts.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getPosts, createPost } from '../services/api';\r\n\r\nexport default function Posts({ token, user }) {\r\n    const [posts, setPosts] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const response = await getPosts();\r\n                setPosts(response.data);\r\n            } catch (err) {\r\n                console.error('Failed to fetch posts', err);\r\n            }\r\n        };\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await createPost({ title, content }, token);\r\n            const response = await getPosts();\r\n            setPosts(response.data);\r\n            setTitle('');\r\n            setContent('');\r\n        } catch (err) {\r\n            console.error('Failed to create post', err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Posts</h2>\r\n            {token && (\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Title\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        required\r\n                    />\r\n                    <textarea\r\n                        placeholder=\"Content\"\r\n                        value={content}\r\n                        onChange={(e) => setContent(e.target.value)}\r\n                        required\r\n                    />\r\n                    <button type=\"submit\">Create Post</button>\r\n                </form>\r\n            )}\r\n            <div>\r\n                {posts.map(post => (\r\n                    <div key={post.id} style={{ margin: '20px 0', padding: '10px', border: '1px solid #eee' }}>\r\n                        <h3>{post.title}</h3>\r\n                        <p>{post.content}</p>\r\n                        <small>By: {post.author || 'Unknown'}</small>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}