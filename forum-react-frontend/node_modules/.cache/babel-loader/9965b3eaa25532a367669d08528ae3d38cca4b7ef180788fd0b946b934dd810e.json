{"ast":null,"code":"var _jsxFileName = \"E:\\\\forum-app_v2\\\\forum-react-frontend\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat({\n  token,\n  user\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const socketRef = useRef(null);\n\n  // Подключение к WebSocket\n  useEffect(() => {\n    if (!token) {\n      console.error('WebSocket: Token is required');\n      return;\n    }\n\n    // Закрываем предыдущее соединение, если есть\n    if (socketRef.current) {\n      socketRef.current.close();\n    }\n    const socket = new WebSocket(`ws://localhost:8081/ws?token=${encodeURIComponent(token)}`);\n    socketRef.current = socket;\n    socket.onopen = () => {\n      console.log('WebSocket: Connection established');\n      setConnectionStatus('connected');\n\n      // Запрос истории сообщений при подключении\n      socket.send(JSON.stringify({\n        type: 'get_history',\n        limit: 50\n      }));\n    };\n    socket.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        if (Array.isArray(data)) {\n          // Получение истории сообщений\n          setMessages(data);\n        } else {\n          // Новое сообщение\n          setMessages(prev => [...prev, data]);\n        }\n      } catch (error) {\n        console.error('WebSocket: Error parsing message', error);\n      }\n    };\n    socket.onerror = error => {\n      console.error('WebSocket: Error occurred', error);\n      setConnectionStatus('error');\n    };\n    socket.onclose = () => {\n      console.log('WebSocket: Connection closed');\n      setConnectionStatus('disconnected');\n    };\n    return () => {\n      if (socket.readyState === WebSocket.OPEN) {\n        socket.close();\n      }\n    };\n  }, [token]);\n  const sendMessage = () => {\n    if (!message.trim()) return;\n    if (!socketRef.current || socketRef.current.readyState !== WebSocket.OPEN) {\n      console.error('WebSocket: Cannot send - connection not ready');\n      setConnectionStatus('error');\n      return;\n    }\n    try {\n      const messageData = {\n        type: 'message',\n        content: message,\n        sender: (user === null || user === void 0 ? void 0 : user.username) || 'Guest',\n        userId: (user === null || user === void 0 ? void 0 : user.id) || 0,\n        timestamp: new Date().toISOString()\n      };\n      socketRef.current.send(JSON.stringify(messageData));\n      setMessage('');\n    } catch (error) {\n      console.error('WebSocket: Send error', error);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Community Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: [\"Status: \", connectionStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sender\",\n          children: [msg.sender, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"content\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type your message...\",\n        disabled: connectionStatus !== 'connected'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: !message.trim() || connectionStatus !== 'connected',\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"3ACDXL8yyOm/3LqKM5/bzzk9L1Q=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useState","useEffect","useRef","jsxDEV","_jsxDEV","Chat","token","user","_s","messages","setMessages","message","setMessage","connectionStatus","setConnectionStatus","socketRef","console","error","current","close","socket","WebSocket","encodeURIComponent","onopen","log","send","JSON","stringify","type","limit","onmessage","event","data","parse","Array","isArray","prev","onerror","onclose","readyState","OPEN","sendMessage","trim","messageData","content","sender","username","userId","id","timestamp","Date","toISOString","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","value","onChange","target","onKeyPress","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["E:/forum-app_v2/forum-react-frontend/src/components/Chat.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\n\r\nexport default function Chat({ token, user }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [connectionStatus, setConnectionStatus] = useState('disconnected');\r\n    const socketRef = useRef(null);\r\n\r\n    // Подключение к WebSocket\r\n    useEffect(() => {\r\n        if (!token) {\r\n            console.error('WebSocket: Token is required');\r\n            return;\r\n        }\r\n\r\n        // Закрываем предыдущее соединение, если есть\r\n        if (socketRef.current) {\r\n            socketRef.current.close();\r\n        }\r\n\r\n        const socket = new WebSocket(`ws://localhost:8081/ws?token=${encodeURIComponent(token)}`);\r\n        socketRef.current = socket;\r\n\r\n        socket.onopen = () => {\r\n            console.log('WebSocket: Connection established');\r\n            setConnectionStatus('connected');\r\n\r\n            // Запрос истории сообщений при подключении\r\n            socket.send(JSON.stringify({\r\n                type: 'get_history',\r\n                limit: 50\r\n            }));\r\n        };\r\n\r\n        socket.onmessage = (event) => {\r\n            try {\r\n                const data = JSON.parse(event.data);\r\n\r\n                if (Array.isArray(data)) {\r\n                    // Получение истории сообщений\r\n                    setMessages(data);\r\n                } else {\r\n                    // Новое сообщение\r\n                    setMessages(prev => [...prev, data]);\r\n                }\r\n            } catch (error) {\r\n                console.error('WebSocket: Error parsing message', error);\r\n            }\r\n        };\r\n\r\n        socket.onerror = (error) => {\r\n            console.error('WebSocket: Error occurred', error);\r\n            setConnectionStatus('error');\r\n        };\r\n\r\n        socket.onclose = () => {\r\n            console.log('WebSocket: Connection closed');\r\n            setConnectionStatus('disconnected');\r\n        };\r\n\r\n        return () => {\r\n            if (socket.readyState === WebSocket.OPEN) {\r\n                socket.close();\r\n            }\r\n        };\r\n    }, [token]);\r\n\r\n    const sendMessage = () => {\r\n        if (!message.trim()) return;\r\n\r\n        if (!socketRef.current || socketRef.current.readyState !== WebSocket.OPEN) {\r\n            console.error('WebSocket: Cannot send - connection not ready');\r\n            setConnectionStatus('error');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const messageData = {\r\n                type: 'message',\r\n                content: message,\r\n                sender: user?.username || 'Guest',\r\n                userId: user?.id || 0,\r\n                timestamp: new Date().toISOString()\r\n            };\r\n\r\n            socketRef.current.send(JSON.stringify(messageData));\r\n            setMessage('');\r\n        } catch (error) {\r\n            console.error('WebSocket: Send error', error);\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            sendMessage();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <h3>Community Chat</h3>\r\n            <div className=\"status\">Status: {connectionStatus}</div>\r\n\r\n            <div className=\"messages\">\r\n                {messages.map((msg, i) => (\r\n                    <div key={i} className=\"message\">\r\n                        <span className=\"sender\">{msg.sender}: </span>\r\n                        <span className=\"content\">{msg.content}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"message-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    onKeyPress={handleKeyPress}\r\n                    placeholder=\"Type your message...\"\r\n                    disabled={connectionStatus !== 'connected'}\r\n                />\r\n                <button\r\n                    onClick={sendMessage}\r\n                    disabled={!message.trim() || connectionStatus !== 'connected'}\r\n                >\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}