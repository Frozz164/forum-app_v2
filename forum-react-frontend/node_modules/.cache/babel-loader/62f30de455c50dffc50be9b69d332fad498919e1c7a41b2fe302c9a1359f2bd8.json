{"ast":null,"code":"var _jsxFileName = \"E:\\\\forum-app_v2\\\\forum-react-frontend\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat({\n  token,\n  user\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [status, setStatus] = useState('disconnected');\n  const [error, setError] = useState(null);\n  const wsRef = useRef(null);\n  const reconnectTimerRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Функция подключения WebSocket\n  const connectWebSocket = () => {\n    // Очищаем предыдущее соединение\n    if (wsRef.current) {\n      wsRef.current.close();\n      wsRef.current = null;\n    }\n\n    // Проверяем наличие токена\n    if (!token) {\n      setError('Authentication token is missing');\n      setStatus('disconnected');\n      return;\n    }\n    setStatus('connecting');\n    setError(null);\n    try {\n      const socket = new WebSocket(`ws://localhost:8081/ws?token=${encodeURIComponent(token)}`);\n      wsRef.current = socket;\n      socket.onopen = () => {\n        console.log('WebSocket connected');\n        setStatus('connected');\n        setError(null);\n\n        // Запрос истории сообщений при подключении\n        socket.send(JSON.stringify({\n          type: 'get_history',\n          limit: 50\n        }));\n      };\n      socket.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n          if (Array.isArray(data)) {\n            // Это история сообщений\n            setMessages(data);\n          } else {\n            // Одиночное сообщение\n            setMessages(prev => [...prev, data]);\n          }\n        } catch (parseError) {\n          console.error('Error parsing message:', parseError);\n          setError('Failed to parse message');\n        }\n      };\n      socket.onerror = errorEvent => {\n        console.error('WebSocket error:', errorEvent);\n        setError('Connection error');\n        setStatus('error');\n      };\n      socket.onclose = closeEvent => {\n        console.log('WebSocket closed:', closeEvent.code, closeEvent.reason);\n        setStatus('disconnected');\n\n        // Автопереподключение только для ненормального закрытия\n        if (closeEvent.code !== 1000) {\n          setError('Reconnecting...');\n          reconnectTimerRef.current = setTimeout(() => {\n            connectWebSocket();\n          }, 3000);\n        }\n      };\n    } catch (setupError) {\n      console.error('WebSocket setup failed:', setupError);\n      setError('Connection setup failed');\n      setStatus('error');\n    }\n  };\n\n  // Подключение при монтировании и при изменении токена\n  useEffect(() => {\n    connectWebSocket();\n    return () => {\n      // Очистка при размонтировании\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n      if (reconnectTimerRef.current) {\n        clearTimeout(reconnectTimerRef.current);\n      }\n    };\n  }, [token]);\n\n  // Отправка сообщения\n  const sendMessage = () => {\n    if (!inputMessage.trim()) return;\n    try {\n      if (!wsRef.current || wsRef.current.readyState !== WebSocket.OPEN) {\n        throw new Error('Connection not ready');\n      }\n      const message = {\n        type: 'message',\n        content: inputMessage,\n        sender: (user === null || user === void 0 ? void 0 : user.username) || 'Guest',\n        userId: (user === null || user === void 0 ? void 0 : user.id) || 0,\n        timestamp: Date.now()\n      };\n      wsRef.current.send(JSON.stringify(message));\n      setInputMessage('');\n    } catch (sendError) {\n      console.error('Error sending message:', sendError);\n      setError('Failed to send message');\n      setStatus('error');\n    }\n  };\n\n  // Обработка нажатия Enter\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  // Если нет пользователя, перенаправляем на логин\n  if (!user) {\n    navigate('/login');\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Community Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `connection-status ${status}`,\n        children: [\"Status: \", status, \" \", error && `(${error})`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.length > 0 ? messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.userId === user.id ? 'own-message' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-sender\",\n          children: msg.sender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: new Date(msg.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }, this)]\n      }, `${msg.timestamp}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-messages\",\n        children: \"No messages yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type your message...\",\n        disabled: status !== 'connected'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: !inputMessage.trim() || status !== 'connected',\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"kZd65VxmRTV8juRyp+d0Xz++qpQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useState","useEffect","useRef","useNavigate","jsxDEV","_jsxDEV","Chat","token","user","_s","messages","setMessages","inputMessage","setInputMessage","status","setStatus","error","setError","wsRef","reconnectTimerRef","navigate","connectWebSocket","current","close","socket","WebSocket","encodeURIComponent","onopen","console","log","send","JSON","stringify","type","limit","onmessage","event","data","parse","Array","isArray","prev","parseError","onerror","errorEvent","onclose","closeEvent","code","reason","setTimeout","setupError","clearTimeout","sendMessage","trim","readyState","OPEN","Error","message","content","sender","username","userId","id","timestamp","Date","now","sendError","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","msg","index","toLocaleTimeString","value","onChange","target","onKeyPress","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["E:/forum-app_v2/forum-react-frontend/src/components/Chat.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Chat({ token, user }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [inputMessage, setInputMessage] = useState('');\r\n    const [status, setStatus] = useState('disconnected');\r\n    const [error, setError] = useState(null);\r\n    const wsRef = useRef(null);\r\n    const reconnectTimerRef = useRef(null);\r\n    const navigate = useNavigate();\r\n\r\n    // Функция подключения WebSocket\r\n    const connectWebSocket = () => {\r\n        // Очищаем предыдущее соединение\r\n        if (wsRef.current) {\r\n            wsRef.current.close();\r\n            wsRef.current = null;\r\n        }\r\n\r\n        // Проверяем наличие токена\r\n        if (!token) {\r\n            setError('Authentication token is missing');\r\n            setStatus('disconnected');\r\n            return;\r\n        }\r\n\r\n        setStatus('connecting');\r\n        setError(null);\r\n\r\n        try {\r\n            const socket = new WebSocket(`ws://localhost:8081/ws?token=${encodeURIComponent(token)}`);\r\n            wsRef.current = socket;\r\n\r\n            socket.onopen = () => {\r\n                console.log('WebSocket connected');\r\n                setStatus('connected');\r\n                setError(null);\r\n\r\n                // Запрос истории сообщений при подключении\r\n                socket.send(JSON.stringify({\r\n                    type: 'get_history',\r\n                    limit: 50\r\n                }));\r\n            };\r\n\r\n            socket.onmessage = (event) => {\r\n                try {\r\n                    const data = JSON.parse(event.data);\r\n                    if (Array.isArray(data)) {\r\n                        // Это история сообщений\r\n                        setMessages(data);\r\n                    } else {\r\n                        // Одиночное сообщение\r\n                        setMessages(prev => [...prev, data]);\r\n                    }\r\n                } catch (parseError) {\r\n                    console.error('Error parsing message:', parseError);\r\n                    setError('Failed to parse message');\r\n                }\r\n            };\r\n\r\n            socket.onerror = (errorEvent) => {\r\n                console.error('WebSocket error:', errorEvent);\r\n                setError('Connection error');\r\n                setStatus('error');\r\n            };\r\n\r\n            socket.onclose = (closeEvent) => {\r\n                console.log('WebSocket closed:', closeEvent.code, closeEvent.reason);\r\n                setStatus('disconnected');\r\n\r\n                // Автопереподключение только для ненормального закрытия\r\n                if (closeEvent.code !== 1000) {\r\n                    setError('Reconnecting...');\r\n                    reconnectTimerRef.current = setTimeout(() => {\r\n                        connectWebSocket();\r\n                    }, 3000);\r\n                }\r\n            };\r\n\r\n        } catch (setupError) {\r\n            console.error('WebSocket setup failed:', setupError);\r\n            setError('Connection setup failed');\r\n            setStatus('error');\r\n        }\r\n    };\r\n\r\n    // Подключение при монтировании и при изменении токена\r\n    useEffect(() => {\r\n        connectWebSocket();\r\n\r\n        return () => {\r\n            // Очистка при размонтировании\r\n            if (wsRef.current) {\r\n                wsRef.current.close();\r\n            }\r\n            if (reconnectTimerRef.current) {\r\n                clearTimeout(reconnectTimerRef.current);\r\n            }\r\n        };\r\n    }, [token]);\r\n\r\n    // Отправка сообщения\r\n    const sendMessage = () => {\r\n        if (!inputMessage.trim()) return;\r\n\r\n        try {\r\n            if (!wsRef.current || wsRef.current.readyState !== WebSocket.OPEN) {\r\n                throw new Error('Connection not ready');\r\n            }\r\n\r\n            const message = {\r\n                type: 'message',\r\n                content: inputMessage,\r\n                sender: user?.username || 'Guest',\r\n                userId: user?.id || 0,\r\n                timestamp: Date.now()\r\n            };\r\n\r\n            wsRef.current.send(JSON.stringify(message));\r\n            setInputMessage('');\r\n        } catch (sendError) {\r\n            console.error('Error sending message:', sendError);\r\n            setError('Failed to send message');\r\n            setStatus('error');\r\n        }\r\n    };\r\n\r\n    // Обработка нажатия Enter\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            sendMessage();\r\n        }\r\n    };\r\n\r\n    // Если нет пользователя, перенаправляем на логин\r\n    if (!user) {\r\n        navigate('/login');\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-header\">\r\n                <h2>Community Chat</h2>\r\n                <div className={`connection-status ${status}`}>\r\n                    Status: {status} {error && `(${error})`}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"messages-container\">\r\n                {messages.length > 0 ? (\r\n                    messages.map((msg, index) => (\r\n                        <div\r\n                            key={`${msg.timestamp}-${index}`}\r\n                            className={`message ${msg.userId === user.id ? 'own-message' : ''}`}\r\n                        >\r\n                            <div className=\"message-sender\">{msg.sender}</div>\r\n                            <div className=\"message-content\">{msg.content}</div>\r\n                            <div className=\"message-time\">\r\n                                {new Date(msg.timestamp).toLocaleTimeString()}\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <div className=\"no-messages\">No messages yet</div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"message-input-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputMessage}\r\n                    onChange={(e) => setInputMessage(e.target.value)}\r\n                    onKeyPress={handleKeyPress}\r\n                    placeholder=\"Type your message...\"\r\n                    disabled={status !== 'connected'}\r\n                />\r\n                <button\r\n                    onClick={sendMessage}\r\n                    disabled={!inputMessage.trim() || status !== 'connected'}\r\n                >\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}